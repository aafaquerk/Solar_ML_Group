"""
Purpose:   To generate Figure 2 in Bobra & Illonidis (2016).

Inputs:    Figure 2 was generated by running the cme_svm.ipynb code with different values for the timedelayvariable, ranging from  48 to 4 hours before the GOES X-ray flare peak time, in 4 hour intervals. The plot will not be exactly the same as the paper, as the number of examples in each fold are necessarily different every time the code is run. However, any iteration of the code should produce a figure with points that are within the error bars of Figure 1.

Usage:     This code depends on the matplotlib and seaborn libraries.

Written:   Monica Bobra
"""

# import some modules
import matplotlib.pyplot as plt
import seaborn as sns

# these are the values of the TSS, and the error in the TSS, as generated by running cme_svm.ipynb for different values for the typedelayvariable.
tss = [0.552352941176,0.531428571429,0.579554367201,0.738487394958,0.656582633053,0.76246031746,0.75951951952,0.646741741742,0.471666666667,0.703333333333,0.627857142857,0.559841269841] 

tss_err = [0.142572212694,0.162005570857,0.160473890193,0.187345552937,0.189317616701,0.103887676276,0.155426616475,0.155761716696,0.153217795539,0.213671606807,0.212156811636,0.0962356486734]

# make the plot
sns.set_style("whitegrid")
fig, ax = plt.subplots()                         
ax.errorbar(np.arange(12), tss, yerr=tss_err, linestyle='', palette="Paired")
ax.plot(np.arange(12), tss,'o',markersize=10)
ax.tick_params(labelsize=12)
plt.xlim(xmax = 12, xmin = -1)
timedelays = ['48','44','40','36','32','28','24','20','16','12','8','4']
plt.xticks(np.arange(12), timedelays)

# label the axes and the plot
ax.set_xlabel('prediction time',fontsize=14)
ax.set_ylabel('TSS',fontsize=14)
plt.title('TSS per time step',fontsize=14)

# save the plot
fig.savefig('TSS_per_time.pdf',bbox_inches='tight',dpi=300,format='pdf')
