"""
Purpose:   To generate Figure 1 in Bobra & Illonidis (2016).

Inputs:    Figure 1 can be generated by removing one feature from the total set of feature, computing the TSS, and repeating the process until only one feature is left. For the red points, the feature with the lowest F-score is removed in each iteration; for the blue points, the feature with the highest F-score is removed in each iteration. At the end of the iterations, Feature 1 for the red points indicates that with the highest F-score, whereas Feature 1 for the blue points indicates that with the lowest F-score.

Usage:     This code depends on the matplotlib and seaborn libraries.

Written:   Monica Bobra
"""

# import some modules
import matplotlib.pyplot as plt
import seaborn as sns

# these are the values of the TSS, and the error in the TSS, when computing these values in two different cases: [1] case 1: when the feature with the lowest F-score is removed per iteration, and [2] case 2: when the feature with the highest F-score is removed per iteration

# Case 1 values
tss_tobest=[0.789444444444,0.738888888889,0.806666666667,0.784744744745,0.770075075075,0.75015015015,0.788408408408,0.736186186186,0.676966966967,0.682447447447,0.662522522523,0.695630630631,0.678078078078,0.538273273273,0.259774774775,0.118243243243,0.151936936937,-0.0225525525526]
tss_tobest_err=[0.163364509496,0.174642491966,0.0840267447136,0.179233187067,0.157591092054,0.153699901417,0.192755623539,0.188732073244,0.17395546743,0.193782802442,0.210804845359,0.19309912294,0.100546442327,0.159778082249,0.123551376542,0.231382981776,0.11434058549,0.160775446632]

# Case 2 values
tss_toworst=[0.777222222222,0.683963963964,0.616666666667,0.638408408408,0.615855855856,0.636741741742,0.637192192192,0.47463963964,0.309459459459,0.238348348348,0.347012012012,0.356276276276,0.193543543544,0.123798798799,-0.0732132132132,0.0599399399399,-0.0747147147147,-0.0744144144144]
tss_toworst_err=[0.210091837649,0.268873642029,0.181369958175,0.293079860812,0.151923198148,0.197326434445,0.160221834112,0.168401415491,0.321912047157,0.236900349999,0.194597160222,0.190012743469,0.173647541831,0.126934032118,0.223439771836,0.157659999983,0.152783679635,0.146961904605]

# set some style elements
sns.set_style("whitegrid")
orangered = (1.0,0.27,0,1.0) 
cornblue  = (0.39,0.58,0.93,1.0)

# make the plot
fig, ax = plt.subplots()  
ax.errorbar(np.arange(18), tss_tobest, yerr=tss_tobest_err, linestyle='',palette="Paired")
ax.plot(np.arange(18), tss_tobest,'o',label='lowest to highest F-score',markersize=10,color=orangered)
ax.errorbar(np.arange(18), tss_toworst, yerr=tss_toworst_err, linestyle='',palette="Paired")
ax.plot(np.arange(18), tss_toworst,'o',label='highest to lowest F-score',markersize=10,color=cornblue)

plt.xlim(xmax = 18, xmin = -1)
nfeatures = [18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1]
plt.xticks(np.arange(18), nfeatures)
ax.tick_params(labelsize=12)

# label the axes and the plot
ax.set_xlabel('number of features',fontsize=14)
ax.set_ylabel('TSS',fontsize=14)
plt.title('TSS per number of features',fontsize=14)
legend = plt.legend(loc='lower left', fontsize=12.1, framealpha=1.0,title='',numpoints = 1,frameon=True)
legend.get_frame().set_linewidth(0.0)

# save the plot
fig.savefig('TSS_per_nfeatures.pdf',bbox_inches='tight',dpi=300,format='pdf')
